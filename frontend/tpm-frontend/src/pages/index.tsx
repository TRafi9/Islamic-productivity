import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useEffect, useState } from "react";
import { format } from "path";
import { text } from "stream/consumers";
import { Button } from "react-bootstrap";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  // checkDate is used as a value to check if the currentDate has been changed
  const [checkDate, setCheckDate] = useState("");

  // add cron job to reexecute current date setup and useeffect setup, needs to run every 24 hours
  // update currentDate every 24 hours
  // in the same loop check if the formatted current date isnt the same
  var currentDate = new Date();
  var year = currentDate.getFullYear();
  var month = String(currentDate.getMonth() + 1).padStart(2, "0"); // Months are zero-based
  var day = String(currentDate.getDate()).padStart(2, "0");

  // Create the formatted date string to match api call date type
  const formattedDate = `${year}-${month}-${day}`;

  interface PrayerData {
    Asr: string;
    Dhuhr: string;
    Fajr: string;
    Isha: string;
    Maghrib: string;
  }
  // create the var which is the same structure as the response
  const [todaysPrayers, setTodaysPrayers] = useState<PrayerData>({
    Asr: "",
    Dhuhr: "",
    Fajr: "",
    Isha: "",
    Maghrib: "",
  });
  // check if its first load, or the day has changed, if so call the API to get new results in todaysPrayers
  //TODO IMPORTANT need to update formattedDate daily/hourly to run this constantly
  useEffect(() => {
    if (formattedDate !== checkDate || checkDate == null) {
      setCheckDate(formattedDate);

      getTodaysPrayers(formattedDate).then((result) => {
        console.log("Checking if result exists:", result);

        if (result) {
          setTodaysPrayers(result);
          console.log("After SetState:", todaysPrayers);
        } else {
          console.log("Result is undefined or null");
        }
      });
    }
  }, [formattedDate]);


  return (
    <>
      <Head>
        <title>The productive muslim</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div></div>
      </main>
    </>
  );
}
