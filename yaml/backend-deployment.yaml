apiVersion: apps/v1
kind: Deployment
metadata:
  name: tpm-backend
  labels:
    app: tpm-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tpm-backend
  template:
    metadata:
      labels:
        app: tpm-backend
    spec:
      # volume is at pod level as it is created for the pod, volume mount is then at container level as it adds the volume to the container
      volumes:
        - name: cloudsql-credentials
          secret:
            secretName: cloudsql-credentials
      containers:
        - name: tpm-backend
          image: tpm-backend:0.0.8
          imagePullPolicy: Never
          env:
            - name: USER
              valueFrom:
                secretKeyRef:
                  name: tpmsecrets
                  key: USER
            - name: CONNECTION_NAME
              valueFrom:
                secretKeyRef:
                  name: tpmsecrets
                  key: CONNECTION_NAME
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tpmsecrets
                  key: PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: tpmsecrets
                  key: DB_NAME
            - name: VERIFICATION_EMAIL
              valueFrom:
                secretKeyRef:
                  name: tpmsecrets
                  key: VERIFICATION_EMAIL
            - name: VERIFICATION_EMAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tpmsecrets
                  key: VERIFICATION_EMAIL_PASSWORD
          ports:
            - containerPort: 8080
              protocol: TCP
        - name: cloud-sql-proxy
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.8.2
          volumeMounts:
            # mount path specifies a directory on the container directory
            - mountPath: /secrets/
              # picking the name of the volume from the pod
              # the secrets file cloudsql-credentials is then parsed automatically into the /secrets/ directory so you can reference those secrets directly with /secrets/<key_name_in_secret>
              name: cloudsql-credentials
              readOnly: true
          env:
            - name: USER
              valueFrom:
                secretKeyRef:
                  name: tpmsecrets
                  key: USER
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tpmsecrets
                  key: PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: tpmsecrets
                  key: DB_NAME
          args:
            - starlit-booster-408007:europe-west2:the-productive-muslim
            - --credentials-file=/secrets/service_account.json
            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            # - "--private-ip"
            # - --private-ip
